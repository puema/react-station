{"version":3,"sources":["lib/index.tsx","pages/async-calls/AsyncCalls.tsx","pages/color-tree/stateUtils.ts","pages/color-tree/Node.tsx","pages/color-tree/ColorTree.tsx","pages/mount-unmount/MountUnmount.tsx","styles/globalStyles.ts","components/GitHubCorner.tsx","components/Header.tsx","components/App.tsx","index.tsx"],"names":["createStore","initialState","initialActions","actions","state","listeners","store","getState","getActions","setState","update","a","async","merge","forEach","listener","useStore","select","s","useState","forceUpdate","lastSelected","useRef","useEffect","selected","current","push","splice","findIndex","l","unboundActions","Object","keys","reduce","boundActions","key","args","bindActions","loading","count","add","value","load","Promise","resolve","setTimeout","AsyncCalls","StyledAsyncCalls","onClick","styled","div","findNode","node","children","result","Node","memo","id","className","useStateSelection","undefined","fn","color","setColor","Container","generateRandomColor","event","stopPropagation","map","child","random","Math","root","parent","foundRightChildren","some","i","createNodes","depth","Array","fill","_","index","ColorTree","setUseStateSelection","StyledColorTree","Checkbox","type","checked","onChange","htmlFor","StyledNode","toString","items","length","remove","slice","MountUnmount","Center","Stretch","Button","Items","item","Subscriber","StyledSubscriber","button","GlobalStyles","createGlobalStyle","GitHubCorner","url","A","href","aria-label","width","height","viewBox","aria-hidden","d","Header","StyledHeader","Left","role","to","Right","header","StyledApp","Content","ReactDOM","render","basename","path","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.e1cbb929.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nexport interface Store<S, A extends ActionMap<S>> {\n  getState(): S;\n  getActions(): BoundActionMap<A>;\n  setState(state: Partial<S> | Promise<Partial<S>>): void | Promise<void>;\n  useStore(select?: (s: S) => any): { state: S; actions: BoundActionMap<A> };\n}\n\nexport function createStore<S, A extends ActionMap<S>>(\n  initialState: S,\n  initialActions: A | ((store: Store<S, A>) => A)\n) {\n  let state = initialState;\n  let actions: BoundActionMap<A>;\n  const listeners: (() => void)[] = [];\n\n  async function setState(update: Partial<S> | Promise<Partial<S>>) {\n    const merge = await update;\n    state = { ...state, ...merge };\n    listeners.forEach(listener => listener());\n  }\n\n  const store = {\n    getState() {\n      return state;\n    },\n\n    getActions() {\n      return actions;\n    },\n\n    setState,\n\n    useStore(select: (s: S) => unknown = s => s) {\n      const [, forceUpdate] = useState();\n      const lastSelected = useRef(select(state));\n      useEffect(() => {\n        const listener = () => {\n          const selected = select(state);\n          if (selected !== lastSelected.current) {\n            forceUpdate({});\n            lastSelected.current = selected;\n          }\n        };\n        listeners.push(listener);\n        return () => {\n          listeners.splice(\n            listeners.findIndex(l => l === listener),\n            1\n          );\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n      return { state, actions };\n    },\n  };\n\n  actions = bindActions(store, initialActions);\n\n  return store;\n}\n\nexport function useStore<S, A extends ActionMap<S>>(store: Store<S, A>, select?: (s: S) => any) {\n  return store.useStore(select);\n}\n\nfunction bindActions<A extends ActionMap<S>, S>(\n  store: Store<S, A>,\n  unboundActions: A | ((store: Store<S, A>) => A)\n) {\n  const { getState, setState } = store;\n  const actions = typeof unboundActions === 'function' ? unboundActions(store) : unboundActions;\n\n  return Object.keys(actions).reduce((boundActions, key) => {\n    (boundActions[key] as any) = (...args: any[]) => setState(actions[key](getState(), ...args));\n    return boundActions;\n  }, {} as BoundActionMap<A>);\n}\n\ntype Action<S> = (state: S, ...props: any[]) => Partial<S> | Promise<Partial<S>>;\ntype ActionMap<S> = { [key: string]: Action<S> };\ntype BoundAction<A> = A extends (state: any, ...args: infer P) => any\n  ? (...args: P) => void\n  : never;\ntype BoundActionMap<A> = {\n  [K in keyof A]: BoundAction<A[K]>;\n};\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { createStore, Store, useStore } from '../../lib';\n\nconst initialState = {\n  loading: false,\n  count: 0,\n};\n\ntype State = typeof initialState;\n\ntype Actions = {\n  add(state: State, value: number): Promise<State>;\n  load(state: State): Partial<State>;\n};\n\nconst actions = ({ getActions }: Store<State, Actions>) => ({\n  async add(state: State, value: number): Promise<State> {\n    getActions().load();\n    await expensive();\n    return {\n      count: state.count + value,\n      loading: false,\n    };\n  },\n\n  load() {\n    return { loading: true };\n  },\n});\n\nconst store = createStore(initialState, actions);\n\nexport function AsyncCalls() {\n  const { state, actions } = useStore(store);\n  const { count, loading } = state;\n  const { add } = actions;\n\n  useEffect(() => {\n    add(1);\n  }, [add]);\n\n  return (\n    <StyledAsyncCalls>\n      <button onClick={() => add(1)}>Very expensive calculation</button>\n      <span>{loading ? `Calculating ${count} + 1...` : `Value: ${count}`}</span>\n    </StyledAsyncCalls>\n  );\n}\n\nasync function expensive() {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, 1000);\n  });\n}\n\nconst StyledAsyncCalls = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n","import { MyNode, Node as NodeType } from './types';\n\nexport const maxDepth = 5;\n\nexport const createNodes = (depth: number = 0, key: string = '0'): MyNode => {\n  const node: MyNode = {\n    key,\n    value: {\n      color: `rgba(255, 255, 255, 0.1)`,\n      count: 0,\n    },\n    children: [],\n  };\n\n  if (depth < maxDepth) {\n    node.children = new Array(4)\n      .fill(undefined)\n      .map((_, index) => createNodes(depth + 1, `${key}-${index}`));\n  }\n\n  return node;\n};\n\nexport function updateNode<T>(ancestor: NodeType<T>, key: string, value: Partial<T>): NodeType<T> {\n  if (ancestor.key === key) {\n    return {\n      key,\n      children: ancestor.children,\n      value: { ...ancestor.value, ...value },\n    };\n  }\n\n  for (let i = 0; i < ancestor.children.length; i++) {\n    ancestor.children[i] = updateNode(ancestor.children[i], key, value);\n  }\n\n  return ancestor;\n}\n\nexport function findNode<T>(node: NodeType<T>, key: string): NodeType<T> | undefined {\n  if (node.key === key) {\n    return node;\n  }\n  for (let child of node.children) {\n    const result = findNode(child, key);\n    if (result) return result;\n  }\n}\n\nexport function setColor(root: MyNode, parent: MyNode, key: string, color: string): MyNode {\n  if (root.key === key) {\n    root.value.color = color;\n    return { ...root };\n  }\n\n  let foundRightChildren = false;\n\n  if (parent.children.some(child => child.key === key)) {\n    foundRightChildren = true;\n  }\n\n  parent.children.forEach((child, i) => {\n    if (foundRightChildren) {\n      child.value.color = color;\n      parent.children[i] = { ...child };\n    } else {\n      setColor(root, parent.children[i], key, color);\n    }\n  });\n\n  return root;\n}\n","import React, { memo } from 'react';\nimport styled from 'styled-components';\nimport { useStore } from '../../lib';\nimport { store } from './ColorTree';\nimport { findNode } from './stateUtils';\n\ninterface NodeProps {\n  id: string;\n  className?: string;\n  useStateSelection?: boolean;\n}\n\nexport const Node = memo(({ id, className, useStateSelection }: NodeProps) => {\n  const { state, actions } = useStore(store, useStateSelection ? s => findNode(s, id) : undefined);\n\n  const node = findNode(state, id);\n  if (!node) return null;\n\n  const { key, value, children } = node;\n  const { color } = value;\n  const { setColor } = actions;\n\n  const changeColor = () => {\n    setColor({ key, color: generateRandomColor() });\n  };\n\n  return (\n    <Container className={className} color={color} onClick={stopPropagation(changeColor)}>\n      {children.map((child: any) => (\n        <Node key={child.key} id={child.key} useStateSelection={useStateSelection} />\n      ))}\n    </Container>\n  );\n});\n\nfunction stopPropagation<F extends Function>(fn?: F) {\n  return (event: React.SyntheticEvent) => {\n    event.stopPropagation();\n    if (fn) fn(event);\n  };\n}\n\nfunction generateRandomColor() {\n  const random = () => Math.random() * 255;\n  return `rgba(${random()}, ${random()}, ${random()}, 0.2)`;\n}\n\nconst Container = styled.div`\n  display: grid;\n  box-sizing: border-box;\n  grid-template-columns: repeat(2, auto);\n  margin: 0.5vh 0.5vw;\n  min-width: 0.5vw;\n  min-height: 0.5vh;\n  background-color: ${({ color }) => color};\n`;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { createStore } from '../../lib';\nimport { createNodes, setColor } from './stateUtils';\nimport { Node } from './Node';\nimport { MyNode } from './types';\n\nconst actions = {\n  setColor(state: MyNode, { key, color }: { key: string; color: string }) {\n    return setColor(state, state, key, color);\n  },\n};\n\nexport const store = createStore(createNodes(), actions);\n\nexport const ColorTree = () => {\n  const [useStateSelection, setUseStateSelection] = useState(true);\n\n  return (\n    <StyledColorTree>\n      <Checkbox>\n        <input\n          id=\"state-selection\"\n          type=\"checkbox\"\n          checked={useStateSelection}\n          onChange={() => setUseStateSelection(!useStateSelection)}\n        />\n        <label htmlFor=\"state-selection\">Use State Selection to avoid unnecessary rerenders </label>\n        (Hint: Activate \"Highlight updates\" in React DevTools to verify)\n      </Checkbox>\n      <StyledNode key={useStateSelection.toString()} id=\"0\" useStateSelection={useStateSelection} />\n    </StyledColorTree>\n  );\n};\n\n// ----==== Styles ====---- //\nconst StyledColorTree = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Checkbox = styled.div`\n  margin: 8px;\n  color: #6f6f6f;\n  font-size: 12px;\n  & > input {\n    margin-right: 8px;\n  }\n`;\n\nconst StyledNode = styled(Node)`\n  flex-grow: 1;\n  margin: 0;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { createStore, useStore } from '../../lib';\n\nconst initialState = {\n  items: [0, 1, 2],\n};\n\ntype State = typeof initialState;\n\nconst actions = {\n  add: ({ items }: State) => ({ items: [...items, items.length] }),\n  remove: ({ items }: State) => ({ items: items.slice(0, items.length - 1) }),\n};\n\nconst store = createStore(initialState, actions);\n\nexport const MountUnmount = () => {\n  const { state, actions } = useStore(store);\n  const { items } = state;\n  const { add, remove } = actions;\n\n  return (\n    <Center>\n      <Stretch>\n        <div>\n          <Button onClick={add}>Add</Button>\n          <Button onClick={remove}>Remove</Button>\n        </div>\n        <Items>\n          {items.map(item => (\n            <Subscriber key={item} />\n          ))}\n        </Items>\n      </Stretch>\n    </Center>\n  );\n};\n\nexport const Subscriber = () => {\n  const { state } = useStore(store);\n  const { items } = state;\n\n  return <StyledSubscriber>{items.length}</StyledSubscriber>;\n};\n\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst Stretch = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Button = styled.button`\n  min-width: 128px;\n`;\n\nconst Items = styled.div`\n  width: 100%;\n`;\n\nconst StyledSubscriber = styled.div`\n  box-sizing: border-box;\n  background-color: #3c3f41;\n  border-radius: 8px;\n  padding: 4px 16px;\n  margin: 16px;\n  display: flex;\n  justify-content: center;\n`;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: 'Open Sans', sans-serif;\n    background-color: #2b2b2b;\n    color: #fff;\n    a {\n      text-decoration: none;\n      color: inherit;      \n    }\n    button {\n      border: none;\n      outline: none;\n      margin: 16px;\n      padding: 8px 16px;\n      font-size: 14px;\n      color: #a9b7c6;\n      font-weight: bolder;\n      background-color: #3c3f41;\n      border-radius: 999px;\n      cursor: pointer;\n    }\n    input {\n      border: none;\n      background-color: #3c3f41;\n    }\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface GitHubCornerProps {\n  url: string;\n}\n\nexport const GitHubCorner = ({ url }: GitHubCornerProps) => (\n  <A href={url} className=\"github-corner\" aria-label=\"View source on GitHub\">\n    <svg width=\"64\" height=\"64\" viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n      <path\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n        fill=\"currentColor\"\n        className=\"octo-arm\"\n      />\n      <path\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n        fill=\"currentColor\"\n        className=\"octo-body\"\n      />\n    </svg>\n  </A>\n);\n\nconst A = styled.a`\n  svg {\n    fill: #4d4d4d;\n    color: #2b2b2b;\n    position: absolute;\n    top: 0;\n    border: 0;\n    right: 0;\n  }\n\n  &:hover .octo-arm {\n    animation: octocat-wave 560ms ease-in-out;\n  }\n\n  .octo-arm {\n    transform-origin: 130px 106px;\n  }\n\n  @keyframes octocat-wave {\n    0%,\n    100% {\n      transform: rotate(0);\n    }\n    20%,\n    60% {\n      transform: rotate(-25deg);\n    }\n    40%,\n    80% {\n      transform: rotate(10deg);\n    }\n  }\n  @media (max-width: 500px) {\n    &:hover .octo-arm {\n      animation: none;\n    }\n    & .octo-arm {\n      animation: octocat-wave 560ms ease-in-out;\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport function Header() {\n  return (\n    <StyledHeader>\n      <Left>\n        <span role=\"img\" aria-label=\"station\">\n          🚉{' '}\n        </span>\n        React Station\n      </Left>\n      <Center>\n        <Link to=\"/\">Update</Link>\n        <Link to=\"async-calls\">Async Calls</Link>\n        <Link to=\"mount-unmount\">Mount/Unmount</Link>\n      </Center>\n      <Right />\n    </StyledHeader>\n  );\n}\n\nconst StyledHeader = styled.header`\n  height: 64px;\n  box-sizing: border-box;\n  padding: 16px;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid #4d4d4d;\n`;\n\nconst Left = styled.div`\n  flex-basis: 20%;\n`;\n\nconst Center = styled.div`\n  flex-basis: 80%;\n  display: flex;\n  justify-content: center;\n  & > * {\n    margin: 0 16px;\n  }\n`;\n\nconst Right = styled.div`\n  flex-basis: 20%;\n`;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { AsyncCalls } from '../pages/async-calls/AsyncCalls';\nimport { ColorTree } from '../pages/color-tree/ColorTree';\nimport { MountUnmount } from '../pages/mount-unmount/MountUnmount';\nimport { GlobalStyles } from '../styles/globalStyles';\nimport { GitHubCorner } from './GitHubCorner';\nimport { Header } from './Header';\n\nexport const App = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <StyledApp>\n        <GlobalStyles />\n        <Header />\n        <GitHubCorner url=\"https://github.com/puema/react-station\" />\n        <Content>\n          <Switch>\n            <Route path=\"/\" exact component={ColorTree} />\n            <Route path=\"/async-calls\" component={AsyncCalls} />\n            <Route path=\"/mount-unmount\" component={MountUnmount} />\n          </Switch>\n        </Content>\n      </StyledApp>\n    </HashRouter>\n  );\n};\n\nconst StyledApp = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Content = styled.div`\n  flex-grow: 1;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}